# This is Git's per-user configuration file.
[user]
	name = Brennan Tracy
	email = brennantracy4@gmail.com
	signingkey = E3A5D73A297B4552E9FBDB394E4674411438A554
[push]
	default = simple
[color]
  # Enable colors in color-supporting terminals
	ui = auto
[alias]
  # List available aliases
	aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
  # Command shortcuts
	ci = commit
	co = checkout
	st = status

  # Display tree-like log, because default log is a pain…
	lg = log --date-order --date=iso --graph --full-history --all --pretty=format:'%x08%x09%C(red)%h %C(cyan)%ad%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08 %C(bold blue)%aN%C(reset)%C(bold yellow)%d %C(reset)%s'

  # Useful when you have to update your last commit
  # with staged files without editing the commit message.
	oops = commit --amend --no-edit
  # Ensure that force-pushing won't lose someone else's work (only mine).
	push-with-lease = push --force-with-lease
  # Rebase won’t trigger hooks on each "replayed" commit.
  # This is an ugly hack that will replay each commit during rebase with the
  # standard `commit` command which will trigger hooks.
	rebase-with-hooks = rebase -x 'git reset --soft HEAD~1 && git commit -C HEAD@{1}'
  # List local commits that were not pushed to remote repository
	review-local = "!git lg @{push}.."
  # Undo last commit but keep changed files in stage
	uncommit = reset --soft HEAD~1
  # Remove file(s) from Git but not from disk
	untrack = rm --cache --
[pull]
	rebase = true
[commit]
	gpgsign = true
[core]
	pager = delta
[interactive]
	diffFilter = delta --color-only
[delta]
	navigate = true  # use n and N to move between diff sections
	line-numbers = true
	syntax-theme = gruvbox-dark
[merge]
	conflictstyle = diff3
[diff]
	colorMoved = default

