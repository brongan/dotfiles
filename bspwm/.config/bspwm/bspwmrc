#!/usr/bin/env bash

set -ux

# Autostart 
dex -ae bspwm

# Please stop
xset s off

mapfile -t MONITORS < <(xrandr --query -display "${DISPLAY}" | grep " connected " | awk '{ print$1 }')
RESOLUTIONS=($(xrandr --current | awk '$0 ~ "*" {print $1}' | head -n 1))

# If we have an internal monitor with 4k rez make it 1080p
for i in "${!RESOLUTIONS[@]}"; do
	if [[  "${MONITORS[$i]}" =~ "eDP" && "${RESOLUTIONS[$i]}" == "3840x2160" ]]; then
		xrandr --output "${MONITORS[$i]}" --mode "1920x1080"
	fi
done

bspc subscribe monitor | while read -r line; do
	case $line in
		monitor_add*|monitor_remove*)
		echo $line
		bspc query -D --names
		bspc query -M --names
		bspc desktop Desktop --remove
		if [ "$(bspc query -M | wc -l)" -eq "3" ]; then
			monitor2=$(bspc query -M | sed -n 1p)
			monitor3=$(bspc query -M | sed -n 2p)
			bspc desktop I -m $monitor2
			bspc desktop II -m $monitor2
			bspc desktop III -m $monitor2
			bspc desktop IV -m $monitor3
			bspc desktop V -m $monitor3
			bspc desktop VI -m $monitor3
		elif [ "$(bspc query -M | wc -l)" -eq "2" ]; then
			monitor1=$(bspc query -M | sed -n 1p)
			monitor2=$(bspc query -M | sed -n 2p)
			bspc desktop I -m $monitor1
			bspc desktop II -m $monitor1
			bspc desktop III -m $monitor1
			bspc desktop IV -m $monitor2
			bspc desktop V -m $monitor2
			bspc desktop VI -m $monitor2
		else
			monitor1=$(bspc query -M | sed -n 1p)
			bspc monitor $monitor1 -d I II III IV V VI
			bspc desktop I -m $monitor1
			bspc desktop II -m $monitor1
			bspc desktop III -m $monitor1
			bspc desktop IV -m $monitor1
			bspc desktop IV -m $monitor1
			bspc desktop V -m $monitor1
			bspc desktop VI -m $monitor1
		fi
		hsetroot -fill ~/Desktop/CyberneticBackground.jpg
		;;
		*)
		;;
	esac
done &


if [[ ${#MONITORS[@]} -eq 1 ]]; then
	bspc monitor "${MONITORS[0]}" -d I II III IV V VI
	bspc rule -a Caprine desktop=^3
	bspc rule -a discord desktop=^3
	bspc rule -a Nightly desktop=^2
	bspc rule -a Google-chrome desktop=^2
	bspc rule -a firefox-nightly desktop=^2
elif  [[ ${#MONITORS[@]} -eq 2 ]]; then
	bspc monitor "${MONITORS[0]}" -d I II III 
	bspc monitor "${MONITORS[1]}" -d IV V VI
	bspc rule -a Caprine desktop=^4
	bspc rule -a discord desktop=^4
else
	bspc monitor "${MONITORS[0]}" -d I II III
	bspc monitor "${MONITORS[1]}" -d IV V VI
	bspc monitor "${MONITORS[2]}" --remove
	bspc rule -a Caprine desktop=^6
	bspc rule -a discord desktop=^6
fi

bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true
bspc config merge_overlapping_monitors true

bspc config border_width		  3
bspc config window_gap			  12
bspc config split_ratio			  0.50
bspc config borderless_monocle	  true
bspc config gapless_monocle		  true
bspc config single_monocle		  true

bspc config split_ratio			 0.52
bspc config borderless_monocle	 true
bspc config gapless_monocle		 true

bspc rule -a Rofi state=floating
bspc rule -a Peek state=floating
bspc rule -a Zathura state=tiled
bspc rule -a firefox state=tiled
bspc rule -a Nightly state=tiled

# pointer
xsetroot -cursor_name left_ptr

steamlib=~/Games/SteamLibrary 
if [[ -d $steamlib ]]; then
	mygames=$(find $steamlib/steamapps/appmanifest_*.acf | sed 's/[^0-9]*//g')
	for game in $mygames; do
		bspc rule -a "steam_app_${game}" desktop=^2 state=fullscreen
	done
fi

hsetroot -fill ~/Desktop/CyberneticBackground.jpg

if command -v "caprine" &> /dev/null; then
	caprine &
fi

sxhkd &
picom &
dunst &
launch_polybar.sh
xrandr --output DP-1 --rate 144 --mode 2560x1440

